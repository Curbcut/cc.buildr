% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variables_table.R
\name{variables_get_region_vals}
\alias{variables_get_region_vals}
\title{Get variable values for regions}
\usage{
variables_get_region_vals(
  scales,
  vars,
  types,
  parent_strings = NULL,
  breaks = NULL,
  time_regex = "_\\\\d{4}$",
  round_closest_5 = TRUE
)
}
\arguments{
\item{scales}{<\code{list}> Lists of spatial features dataframes with regions and
scales. List of two depths (region and scales).}

\item{vars}{<\code{character}> A character vector of variable codes. Unique variable
codes, no times appended.}

\item{types}{<\code{list}> A named list of variable types, one of: "\code{pct}", "\code{avg}",
"\code{median}", "\code{dollar}", "\code{count}", "\code{ind}", "\code{sqkm}", "\code{per1k}".
The names of the list should match the variable names in \code{vars}.}

\item{parent_strings}{<\code{list}> A named list of parent strings. The names of the list
should match the variable names in \code{vars}. The parent strings are used
to calculate the absolute values of certain variable types. We know the
absolute number of tenant households by multiplying the percentage with the
number of households. The parent_strings must be present in the same \code{df} as the
vars.}

\item{breaks}{<\verb{named list}> A named list of dataframes of variable breaks
for \code{ind} variables. Usually the \code{q5_breaks_table} of \code{\link{calculate_breaks}}
The names of the list should match the variable names in \code{vars}.}

\item{time_regex}{<\code{character}> A regular expression used to identify the
years for which a variable has data. The default is "\verb{_\\\\d\{4\}$}".}

\item{round_closest_5}{<\code{logical}> Whether the absolute count or \code{pct} variables
should be rounded up to the closest 5, to not give impression of accuracy
we do not have. The census is rounded to a random 5 units.}
}
\value{
A list with dataframes of the region, year, value, and count (if
applicable) for each variable.
}
\description{
This function takes in a set of variables and scales, and iterates over
each variable to get its values for each region and year. The function
returns a data frame with the region, year, value, and count (if applicable)
for each variable.
}
