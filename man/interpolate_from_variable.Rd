% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate.R
\name{interpolate_from_variable}
\alias{interpolate_from_variable}
\title{Interpolate variables using a custom weighting factor, with the weighting
factor itself interpolated based on area proportions}
\usage{
interpolate_from_variable(
  to,
  from,
  average_vars = c(),
  additive_vars = c(),
  weight_by,
  round_additive = TRUE,
  crs
)
}
\arguments{
\item{to}{<\verb{sf data.frame}> Table for which data must be interpolated}

\item{from}{<\verb{sf data.frame}> A \code{DA} sf data.frame from which
variables will be interpolated.}

\item{average_vars}{<\verb{character vector}> Corresponds to the column names
of the variables that are to be interpolated as an average, like a percentage,
a median, an index, etc. weighted by the \code{weight_by} argument.}

\item{additive_vars}{<\verb{character vector}> Corresponds to the column names of
the variables that are 'count' variables.}

\item{weight_by}{<\code{character}> Column name in \code{from} data to be used for weighting
the interpolation of both average and additive variables.}

\item{round_additive}{<\code{logical}> If additive variables should be rounded,
e.g. the population or count of households.}

\item{crs}{<\code{numeric}> EPSG coordinate reference system to be assigned, e.g.
\code{32618} for Montreal.}
}
\value{
Returns the \code{to} data.frame with the added or modified columns that
have been interpolated from the \code{from}.
}
\description{
Interpolate variables using a custom weighting factor, with the weighting
factor itself interpolated based on area proportions
}
